/*
Shader generated by Savvy - The Smart Shader Cross Compiler.
Author: Apostol Dadachev
Version: 1.0
*/

#version 450 core
layout(std140, binding=0) uniform UniformBuffer0
{
	mat4 ViewMatrix;
	mat4 ProjectionMatrix;
	mat4 WorldMatrix;
	vec3 LightPos;
	vec4 LightColor;
};

layout(location=0) in vec3 in_Position; /* Original Semantic: POSITION */
layout(location=1) in vec3 in_Normal; /* Original Semantic: NORMAL */
layout(location=2) in vec2 in_TexCoord; /* Original Semantic: TEXCOORD */
layout(location=3) in vec3 Tangent; /* Original Semantic: TANGENT */
layout(location=4) in vec3 BiTangent; /* Original Semantic: BITANGENT */
layout(location=5) in vec4 in_Color; /* Original Semantic: COLOR */

layout(location=0) out vec3 Normal; /* Original Semantic: NORMAL */
layout(location=1) out vec3 LightDir; /* Original Semantic: LIGHTDIR */
layout(location=2) out vec4 Color; /* Original Semantic: COLOR */
layout(location=3) out vec2 TexCoord; /* Original Semantic: TEXCOORD */

 vec2 global1;
 vec4 global2 = { 1,1,1,1 };
 float global3;

void main()
{
	mat4 viewProjMat = ProjectionMatrix * ViewMatrix;
	mat4 mvp = viewProjMat * WorldMatrix;
	gl_Position = mvp * vec4(in_Position,1.0);
	Normal = in_Normal * mat3(WorldMatrix);
	Normal = normalize(Normal);
	LightDir = normalize(LightPos);
	Color = in_Color * LightColor * global2;
	TexCoord = in_TexCoord;
}
