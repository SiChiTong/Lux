/*
Shader generated by Savvy - The Smart Shader Cross Compiler.
Author: Apostol Dadachev
Version: 1.0
*/

cbuffer ObjectBuffer : register(b0)
{
	matrix ViewMatrix;
	matrix ProjectionMatrix;
	matrix WorldMatrix;
};

struct InputData
{
	float3 in_Position : POSITION;
	float3 in_Normal : NORMAL;
	float2 in_TexCoord : TEXCOORD;
	float3 Tangent : TANGENT;
	float3 BiTangent : BITANGENT;
	float4 in_Color : COLOR;
};

struct OutputData
{
	float3 Normal : NORMAL;
	float4 Color : COLOR;
	float2 TexCoord : TEXCOORD;
	float4 WorldPos : WORLD_POS;
	float4 gl_Position : SV_Position;
};

OutputData main(InputData IN)
{
	OutputData OUT;
	matrix viewProjMat = mul(ProjectionMatrix, ViewMatrix);
	matrix mvp = mul(viewProjMat, WorldMatrix);
	OUT.gl_Position = mul(mvp, float4(IN.in_Position,1.0));
	OUT.WorldPos = mul(WorldMatrix, float4(IN.in_Position,1.0));
	OUT.Normal = normalize(mul((float3x3)WorldMatrix, IN.in_Normal));
	OUT.Color = IN.in_Color;
	OUT.TexCoord = IN.in_TexCoord;
	return OUT;
}

